#
# wm independent hotkeys
#

# terminal emulator
alt + t
    urxvt -e bash -c "tmux -q has-session && exec tmux attach-session -d || exec tmux new-session -n$USER -s$USER"

# program launcher
super + space
    dmenu_run -h 15 -w 500 -x 400 -y 300 -l 8 -p 'Run: ' -fn "Source Code Pro-12:normal" -z -o 0.7 -dim 0.25 -dc "#00BFFF" -sb "#00FF00" -sf "#000000" -nb "#000000" -nf "#00FF00"

alt + w
	firefox

alt + c
    ToggleComp

## show acpi output (battery status)
super + a
    notify-send -t 0 "`acpi`"

# show current date/time
super + d
    notify-send -t 0 "`date +'%H:%M   %a, %d %b %Y'`"

# Calendar
super + c
    notify-send -t 0 "`cal`"

#### Screenshot
#alt + z # just highlighted window
#    #import -screen root /home/nava/Pictures/screenshots/%Y-%m-%d-%T-screenshot.png
#    import -window $(xdotool getwindowfocus -f) "/home/nava/Pictures/screenshots/$(date +%F_%H%M%S_)screenshot.png"
#alt + shift + z # full screenshot
#    import -window root "/home/nava/Pictures/screenshots/$(date +%F_%H%M%S_)screenshot.png"


# Schedule
super + v
    feh ~/Pictures/SPRING2017.png

# show output of periodically run update-checking script
#super + u
#    notify-send -t 5000 "`cat /var/local/updates-available-sh.info`"

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# Scratchpad
super + Return
    xdotool search --onlyvisible --classname scratchpad windowunmap \
    || xdotool search --classname scratchpad windowmap \
    || urxvt -name scratchpad &

# Volume #
# Toggle mute/unmute volume
F9
    amixer set Master toggle
# Adjust volume
{F10,F11}
    amixer set Master 5%{-,+} unmute

XF86AudioMute
    amixer set Master toggle
{XF86AudioLowerVolume,XF86AudioRaiseVolume}
    amixer set Master 5%{-,+} unmute
#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	pkill -x panel; bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t}
	bspc node -t {tiled,pseudo_tiled}

super + f
    bspc node --state \~fullscreen
super + s
    bspc node --state \~floating

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node
super + {_,shift + }c
	bspc node -f {next,prev}

# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# resize tiled/floating
#

# expand the tiled space in the given direction
super + alt + {h,j,k,l}
	bspc node {@west -r -10,@south -r +10,@north -r -10,@east -r +10}

# contract the tiled space in the given direction
super + alt + shift + {h,j,k,l}
	bspc node {@east -r -10,@north -r +10,@south -r -10,@west -r +10}

# move a floating window
super + {Left,Down,Up,Right}
	xdo move {-x -20,-y +20,-y -20,-x +20}

super + {minus,equal}
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2)) 
#
# pointer focus/move/resize
#

# focus
~button1
	bspc pointer -g focus

# start move/resize
super + button{1-3}
	; bspc pointer -g {move,resize_side,resize_corner}

# end move/resize
super + @button{1-3}
	bspc pointer -u
